$(function () {
	
	var resizeid;
	var options = [];
	var projects = [];
	var people = [];
	var active;
	
	//Main Navigation		
	$('nav a').on('click', function () {
		$('nav a.active').removeClass('active');
		active = $(this).attr('class');
		$(this).addClass('active');
		$('main div.content').hide();
		$('main div.' + active).show('fast');
		$('#selector').remove();
		switch(active){
			case 'projects':
				options = projects;
				// reset button
				$('header button').text('Select Project...');
			break;
			case 'people':
				options = people;
				// reset button
				$('header button').text('Select Person...');
			break;
		}
		
		buildSelector(options);
	});
	
	init();
	
	function init(){
		getProjects();
		$('nav .projects').click();
		getPeople();
	}

	
	//Data
		
	function getProjects(){
		
		$.getJSON('/js/data.projects.json')
		.done(function(data) {
			$.each( data.projects.project, function( i, item ) {
 					var specs = {
 						'id' : 'canvas-' + i,
 						'name' : item.name,
 						'location' : item.location,
 						'summary' : item.summary,
 						'image' : item.image
						}
				projects.push(specs);
			});
  		})
  		.fail(function() {
  			console.log( "error" );
  		})
	}
	function getPeople(){
		
		$.getJSON('/js/data.people.json')
		.done(function(data) {
			$.each( data.people.person, function( i, item ) {
					var specs = {
 						'id' : 'canvas-' + i,
 						'name' : item.name,
 						'title' : item.title,
 						'summary' : item.summary,
 						'image' : item.image
						}
					people.push(specs);
			});
  		})
  		.fail(function() {
  			console.log( "error" );
  		})
	}
	
	// Hover Select Button
	$('header button').on('click', function(){
			
		$('#selector').css('visibility','visible');
		$('#modal').remove();
		
	});
	
	// Rebuild Selector on resize
	$(window).resize(function(){
		clearTimeout(resizeid);
		resetLayout();
		resizeid = setTimeout(resizeComplete, 100);
	}).resize();
	
	function resizeComplete (){
		buildSelector(options);
		//backgroundCanvas();
	}
	
	function resetLayout(element) {
		
		switch(element) {
			case 'selector':
				$('#selector').remove();
			break;
			case 'modal' :
				$('#modal').remove();
			break;
			case 'background' :
				$('#backcanvas').remove();
			break;
			default:
				$('#selector').remove();
				$('#modal').remove();
				$('#backcanvas').remove();
			break;
		}
	}
	
	function backgroundCanvas(activeObj){
		
	
		// activeObj: selected items object or empty to use existing
		var srcImagePath, srcId;
		switch(activeObj){
			case undefined :
				var activeBgId = $('#backcanvas').attr('data-active');
				
				if(activeBgId){
					//data-active will contain 'canvas-{n}' if set
					var activeBgIndex = Number(activeBgId.substring(7));
					srcImagePath = options[activeBgIndex].image;
					srcId = activeBgId;
				} else{
					//no selected item (initial page load)
					return;
				}
			break;
			default: 
				srcImagePath = activeObj.image;
				srcId = activeObj.id;
			break;
		};
		
		//viewport(v) dimensions
		var vw = $(window).width();
		var vh = $(window).height();
		//target background canvas
// 		var backCanvas = document.getElementById('backcanvas');
		
		var backCanvas = document.createElement('canvas');
		var backCtx = backCanvas.getContext('2d');
		backCanvas.width = vw;
		backCanvas.height = vh;
		backCanvas.id = 'backcanvas';
		$(backCanvas).attr('data-active', srcId);
		var srcImage = new Image();
		
		srcImage.onload = function () {
				drawImageProp(backCtx,srcImage,0,0,vw,vh);
				$('#content').prepend(backCanvas);
 				replicateCanvas(backCanvas);
 				tintImg(backCtx,vw,vh,'#9797A6');
			}
			
		srcImage.src = srcImagePath;
		
	}
	
	function buildModal(activeObj){
		
		backgroundCanvas(activeObj);
		hideSelector();
		
		var modal = '<div id="modal">';
		modal += '<div class="wrapper"><div class="info">';
		modal += '<div class="icons">&nbsp;</div>';
		switch(active){
			case 'projects':
				modal += '<section><h3>Location</h3><p>' + activeObj.location + '</p></section>';
			break;
			case 'people' :
				modal += '<section><h3>Title</h3><p>' + activeObj.title + '</p></section>';
			break;
		}
		modal += '<section><h3>Summary</h3><p>' + activeObj.summary + '</p></section>';
		modal += '</div></div></div>';
		
		$('body').append(modal);
		
		var offset_main = $('main').offset();
		var height_header = $('header').height();
		
		var props = {
			'height' : $(window).height() - height_header,
			'width' : $(window).width() - (offset_main.left*2),
			'left' : offset_main.left
		};
		
		$('#modal').css(props);
		
		var dropdown_width = $('.dropdown').width();
		$('#modal .info').css({'width' : dropdown_width, 'height' : $(window).height() - height_header});
		
		$('#modal .icons').on('click', function(){
			$('#modal').remove();
		});
		//console.log(projects);
	}
	
	function replicateCanvas(canvas){
		
		var vignetteCanvas = document.createElement('canvas');
		var vignetteContext = vignetteCanvas.getContext('2d');
		var cw = $('#modal').width();
		var ch = $('#modal').height();
		console.log();
		var border = parseInt($('#modal').css('border-width'));
		var offx = $('main').offset();
		var offy = $('header').height();
		vignetteCanvas.id = 'vignette';
		vignetteCanvas.width = cw;
		vignetteCanvas.height = ch;
		vignetteContext.drawImage(canvas,offx.left+border,offy-border,cw,ch,0,0,cw,ch);
		
		$('#modal .wrapper').append(vignetteCanvas);
	}
	
	function hideSelector(){
		$('#selector').css('visibility','hidden');
	}
	
	function buildSelector(options_array){
		
		// attach selector
		var op = '<div id="selector" class="' + active + '"><div class="wrapper">';
  		for(i = 0; i < options_array.length; i++) {
	  		switch(active){
		  		case 'people' :
		  		case 'projects' : 
		  			op += '<div class="option"><canvas id="' + options_array[i].id + '" data-src="' + options_array[i].image + '"></div>'
		  		break;
		  		default: 
		  			return;
		  		break;
	  		}
  		}
  		op += '</div></div>';
		
		$('div.dropdown').prepend(op);
		
		// selector parameters
		var vh = $(window).height();
		$('#selector').height(vh);
		
		// canvas parameters
		var canvases = $('#selector canvas');
		var cw = $('div.dropdown').width();
		
		$.each(canvases, function(key, value){
			
			var img_src = $(value).attr('data-src');
			var context = value.getContext('2d');
			var img = new Image();
 			var dims = readFileName(img_src);
 			var height = canvasDimension(dims, 'height', cw);
 			value.width = cw;
 			value.height = height;
			
			img.onload = function () {
				drawImageProp(context,img,0,0,cw,height,0,0);
				tintImg(context,cw,height,'#9797A6');
			}
			
			img.src = img_src;
		
		});
		
		// EVENTS
		// Click
		$('#selector div.option').on('click', function(){
			$('#selector div.selected').removeClass('selected');
			$(this).toggleClass('selected');
			
			var nth = $(this).index();
			
			$('header button').text(options_array[nth].name);
			 resetLayout('background');
			//send entry specs to build modal window
			buildModal(options_array[nth]);
		})
		
		// Mouseout
		$('#selector').on('mouseleave', function(){
			$(this).css('visibility','hidden');
		})
		
	}
	
	
	function canvasClone(canvas) {
		
		var colCanvas = document.createElement('canvas');
		var colContext = colCanvas.getContext('2d');
		colCanvas.id = canvas.id + '-color';
		colCanvas.className = 'canvas-color';
		colCanvas.width = canvas.width;
		colCanvas.height = canvas.height;
// 		colContext.drawImage(canvas,0,0);
		drawImageProp(colContext, canvas, 0, 0, 300, 150, 0, 0);
		return colCanvas;
	}
	
	function canvasDimension(src_dimensions, mode, calc_value){
		// src_dimensions: array [0]width [1]height of source image
		// mode: string to determine what to calculate ('width' || 'height')
		// calc_value: number to use for calculation (width || height)
		var perc;
		
		switch(mode){
			//calculate
			case 'height' :
				//calculate height;
				perc = calc_value / src_dimensions[0];
				return Math.floor(perc * src_dimensions[1]);
			break;
			case 'width' :
				//calculate width;
				perc = calc_value / src_dimensions[1];
				return Math.floor(perc * src_dimensions[0]);
			break;
			default :
				return 300;
			break;
		}
				
	}
	
	function readFileName(imagepath){
		//return [width,height]
		var delimeters = imagepath.split('/')
		var filename = delimeters[3];
		var src_width = Number( filename.substring(0, delimeters[3].indexOf("x") ) );
		var src_height = Number( filename.substring(delimeters[3].indexOf("x") + 1, delimeters[3].indexOf(".jpg")) );
		
		return [src_width,src_height];
	}
	
	
	
		
})